{"version":3,"file":"rcon.js","sourceRoot":"","sources":["rcon.ts"],"names":[],"mappings":"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","sourcesContent":["import * as net from 'net';\nimport {Buffer} from 'buffer';\n\nexport class ExtendableError extends Error {\n\tconstructor(message: string = '', public readonly innerException?: Error) {\n\t\tsuper(message);\n\t\tthis.message = message;\n\t\tthis.name = this.constructor.name;\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nexport class RconError extends ExtendableError {\n\tconstructor(message: string, innerException?: Error) {\n\t\tsuper(message, innerException);\n\t\tObject.freeze(this);\n\t}\n}\n\nexport const enum State {\n\tDisconnected = 0,\n\tConnecting = 0.5,\n\tConnected = 1,\n\tAuthorized = 2,\n\tRefused = -1,\n\tUnauthorized = -2\n}\n\nconst enum PacketType {\n\tAUTH = 0x03, // outgoing\n\tCOMMAND = 0x02, // outgoing\n\tRESPONSE_AUTH = 0x02 // incoming\n}\n\ntype Callback = (data: string | null, error?: Error) => void;\n\nexport interface RconConfig {\n\thost: string;\n\tport?: number;\n\tpassword: string;\n\ttimeout?: number;\n}\n\nexport namespace Defaults\n{\n\texport const PORT:number = 25575;\n\texport const TIMEOUT:number = 5000;\n}\nObject.freeze(Defaults);\n\n\nexport class Rcon implements RconConfig {\n\n\treadonly host: string;\n\treadonly port: number;\n\treadonly password: string;\n\treadonly timeout: number;\n\n\tenableConsoleLogging: boolean = false;\n\n\tprivate _authPacketId: number = NaN;\n\tprivate _state: State = State.Disconnected;\n\tprivate _socket: net.Socket | undefined;\n\tprivate _lastRequestId: number = 0xF4240;\n\tprivate _callbacks: Map<number, Callback> = new Map();\n\tprivate _errors: Error[] = [];\n\tprivate _connector: Promise<Rcon> | undefined;\n\tprivate _sessionCount:number = 0;\n\n\tget errors(): Error[] {\n\t\treturn this._errors.slice();\n\t}\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tconstructor(config: RconConfig) {\n\t\tlet host = config.host;\n\t\tthis.host = host = host && host.trim();\n\t\tif (!host)\n\t\t\tthrow new TypeError('\"host\" argument cannot be empty');\n\n\t\tthis.port = config.port || Defaults.PORT;\n\n\t\tconst password = config.password;\n\t\tif (!password || !password.trim())\n\t\t\tthrow new TypeError('\"password\" argument cannot be empty');\n\n\t\tthis.password = password;\n\t\tthis.timeout = config.timeout || Defaults.TIMEOUT;\n\t}\n\n\tconnect(): Promise<Rcon> {\n\t\tconst _ = this;\n\t\tlet p = _._connector;\n\t\tif (!p) _._connector = p = new Promise<Rcon>((resolve, reject) => {\n\t\t\t_._state = State.Connecting;\n\t\t\tif (_.enableConsoleLogging) console.log(this.toString(), \"Connecting...\");\n\t\t\tconst s = _._socket = net.createConnection(_.port, _.host);\n\n\t\t\tfunction cleanup(message?: string, error?: Error): RconError | void {\n\t\t\t\tif (error) _._errors.push(error);\n\t\t\t\ts.removeAllListeners();\n\t\t\t\tif (_._socket == s) _._socket = undefined;\n\t\t\t\tif (_._connector == p) _._connector = undefined;\n\t\t\t\tif (message) {\n\t\t\t\t\tif (_.enableConsoleLogging) console.error(_.toString(), message);\n\t\t\t\t\tif (message) return new RconError(message, error);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Look for connection failure...\n\t\t\ts.once('error', error => {\n\t\t\t\t_._state = State.Refused;\n\t\t\t\treject(cleanup(\"Connection refused.\", error)); // ** First point of failure.\n\t\t\t});\n\n\t\t\t// Look for successful connection...\n\t\t\ts.once('connect', () => {\n\t\t\t\ts.removeAllListeners('error');\n\t\t\t\t_._state = State.Connected;\n\t\t\t\tif (_.enableConsoleLogging) console.log(_.toString(), \"Connected. Authorizing ...\");\n\n\t\t\t\ts.on('data', data => _._handleResponse(data));\n\n\t\t\t\ts.on('error', error => {\n\t\t\t\t\t_._errors.push(error);\n\t\t\t\t\tif (_.enableConsoleLogging) console.error(_.toString(), error);\n\t\t\t\t});\n\n\t\t\t\t_._send(_.password, PacketType.AUTH).then(() => {\n\t\t\t\t\t_._state = State.Authorized;\n\t\t\t\t\tif (_.enableConsoleLogging) console.log(_.toString(), \"Authorized.\");\n\t\t\t\t\tresolve(_);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\t_._state = State.Unauthorized;\n\t\t\t\t\treject(cleanup(\"Authorization failed.\", error)); // ** Second point of failure.\n\t\t\t\t});\n\t\t\t});\n\n\t\t\ts.once('end', () => {\n\t\t\t\tif (_.enableConsoleLogging) console.warn(this.toString(), \"Disconnected.\");\n\t\t\t\t_._state = State.Disconnected;\n\t\t\t\tcleanup();\n\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync session<T>(context:(rcon:Rcon,sessionId:number)=>Promise<T>):Promise<T>\n\t{\n\t\tconst sessionId = ++this._sessionCount;\n\t\tlet rcon:Rcon|undefined;\n\t\ttry {\n\t\t\trcon = await this.connect();\n\t\t\treturn await context(rcon, sessionId);\n\t\t}\n\t\tfinally {\n\t\t\tthis._sessionCount--;\n\t\t\tif(!this._sessionCount && rcon)\n\t\t\t\trcon.disconnect();\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn `RCON: ${this.host}:${this.port}`;\n\t}\n\n\tdisconnect(): void {\n\t\tconst s = this._socket;\n\t\tthis._callbacks.clear();\n\t\tif (s) s.end();\n\t\tthis._socket = undefined;\n\t\tthis._connector = undefined;\n\t}\n\n\t_handleResponse(data: Buffer): void {\n\t\tconst len = data.readInt32LE(0);\n\t\tif (!len) throw new RconError('Received empty response package');\n\n\t\tlet id = data.readInt32LE(4);\n\t\tconst type = data.readInt32LE(8);\n\t\tconst callbacks = this._callbacks;\n\t\tconst authId = this._authPacketId;\n\n\t\tif (id === -1 && !isNaN(authId) && type === PacketType.RESPONSE_AUTH) {\n\t\t\tif (callbacks.has(authId)) {\n\t\t\t\tid = authId;\n\t\t\t\tthis._authPacketId = NaN;\n\t\t\t\tcallbacks.get(authId)!(null, new RconError('Authentication failed.'));\n\t\t\t}\n\t\t}\n\t\telse if (callbacks.has(id)) {\n\t\t\tlet str = data.toString('utf8', 12, len + 2);\n\t\t\tif (str.charAt(str.length - 1) === '\\n')\n\t\t\t\tstr = str.substring(0, str.length - 1);\n\n\t\t\tcallbacks.get(id)!(str);\n\t\t}\n\n\t\tcallbacks.delete(id); // Possibly superfluous but best to be sure.\n\t}\n\n\tasync send(data: string): Promise<string> {\n\t\tif (!this._connector || this._state <= 0)\n\t\t\tthrow new RconError('Instance is not connected.');\n\n\t\tawait this._connector;\n\t\treturn await this._send(data, PacketType.COMMAND);\n\t}\n\n\tprivate async _send(data: string, cmd: number): Promise<string> {\n\t\tconst s = this._socket;\n\t\tif (!s || this._state <= 0)\n\t\t\tthrow new RconError('Instance was disconnected.');\n\n\t\tconst length = Buffer.byteLength(data);\n\t\tconst id = ++this._lastRequestId;\n\t\tif (cmd === PacketType.AUTH) this._authPacketId = id;\n\n\t\tconst buf = Buffer.allocUnsafe(length + 14);\n\t\tbuf.writeInt32LE(length + 10, 0);\n\t\tbuf.writeInt32LE(id, 4); // Not sure how this is used or needed.\n\t\tbuf.writeInt32LE(cmd, 8);\n\t\tbuf.write(data, 12);\n\t\tbuf.fill(0x00, length + 12);\n\n\t\tawait s.write(buf, 'binary');\n\n\t\treturn await new Promise<string>((resolve, reject) => {\n\n\t\t\tconst cleanup = () => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ts.removeListener('end', onEnded);\n\t\t\t\tthis._callbacks.delete(id);\n\t\t\t\tif (cmd === PacketType.AUTH) this._authPacketId = NaN;\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tcleanup();\n\t\t\t\treject(new RconError('Request timed out'));\n\t\t\t}, this.timeout);\n\n\t\t\tconst onEnded = () => {\n\t\t\t\tcleanup();\n\t\t\t\treject(new RconError('Disconnected before response.'));\n\t\t\t};\n\n\t\t\ts.once('end', onEnded);\n\n\t\t\tthis._callbacks.set(id, (data, err) => {\n\t\t\t\tcleanup();\n\n\t\t\t\tif (err) reject(err);\n\t\t\t\tif (data == null) reject(new RconError(\"No data returned.\"));\n\t\t\t\telse resolve(data);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default Rcon;\n"]}